import random

class Squire:
    def __init__(self, name="Unnamed Squire", knight_master=None):
        self.name = name
        self.knight_master = knight_master  # Which knight they serve
        
        # Squires are apprentices - lower stats than knights
        self.vigour = self.roll_d6()
        self.clarity = self.roll_d6()
        self.spirit = self.roll_d6()
        
        # Squires have lower guard than knights
        self.guard = self.roll_d12()  # Lower than knight's d20
        
        # Basic equipment - squires carry a dagger and help with gear
        self.dagger = "d6"
        self.equipment = ["Dagger", "Travel Pack", "Waterskin"]
        
        # Squires provide assistance to their knight
        self.virtue_bonus = "2d6"  # They give +2d6 for each Virtue to their knight
        
        # Squires cannot perform Feats yet (they're still learning)
        self.can_perform_feats = False
        
        # Squires are loyal but not yet sworn to the full Oath
        self.oath_status = "Apprentice"
    
    def roll_d6(self):
        """Roll a standard d6"""
        return random.randint(1, 6)
    
    def roll_d12(self):
        """Roll a d12 for squire guard (weaker than knight's d20)"""
        return random.randint(1, 12)
    
    def assist_knight(self):
        """Squires provide +2d6 bonus dice for their knight's virtue rolls"""
        if self.knight_master:
            return f"{self.name} assists {self.knight_master} (+2d6 to virtue rolls)"
        return f"{self.name} has no knight to assist"
    
    def carry_gear(self, item):
        """Squires help carry equipment"""
        self.equipment.append(item)
        return f"{self.name} now carries {item}"
    
    def __str__(self):
        master_name = self.knight_master if self.knight_master else "No Master"
        return f"""
		Squire: {self.name}
		Master: {master_name}
		Vigour: {self.vigour} (Developing strength)
		Clarity: {self.clarity} (Learning wisdom)
		Spirit: {self.spirit} (Growing courage)
		Guard: {self.guard} (Basic defense skills)

		Equipment: {', '.join(self.equipment)}
		Status: {self.oath_status}
		Virtue Assistance: {self.virtue_bonus} bonus to knight's rolls
        """

if __name__ == "__main__":
    # Create a squire
    squire = Squire("Young Willem", "Sir Gareth the Bold")
    print(squire)
